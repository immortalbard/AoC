'''

                            Online Python Compiler.
                Code, Compile, Run and Debug python program online.
Write your code in this editor and press "Run" button to execute it.

'''
from itertools import permutations

def inpcode(seti,opcode,inp):

    code=seti[0][-2:]
    modes=[ x for x in seti[0][0:2]]
#    print(modes)
    
    for i in range(len(modes)):
#        print(seti[i],modes[i-1])
        if int(modes[-1-i])==0 and len(seti)!=len(modes):
            foo=opcode[seti[i+1]]
            seti[i+1]=foo
    
#    print(seti)
            
    # if code in ['01','02','07','08']:
    #     if code=='01':
    #         opcode[seti[3]] = seti[1]+seti[2]
            
    #     elif code=='02':
    #         opcode[seti[3]]=seti[1]*seti[2]
            
    #     elif code=='07':
    #         if seti[1]<seti[2]:
    #             opcode[seti[3]]=1
    #         else:
    #             opcode[seti[3]]=0
            
    #     elif code=='08':
    #         if seti[1]==seti[2]:
    #             opcode[seti[3]]=1
    #         else:
    #             opcode[seti[3]]=0
            
    #     else:
    #         print('error')        
    #         '''
    #     elif code=='09':
    #         if seti[1]>seti[2]:
    #             opcode[seti[3]]=1
    #         else:
    #             opcode[seti[3]]=0
    #             '''

    if code in ['03','04']:
        if code=='03':
            opcode[seti[1]]=inp
            
        if code=='04':
            return opcode[seti[1]]
    
    # if code in ['05','06']:
    #     if code=='05':
    #         if seti[1]!=0:
    #             return seti[2]
    #         else:
    #             return None
        
    #     if code=='06':
    #         if seti[1]==0:
    #             return seti[2]
    #         else:
    #             return None
        
def intcode(seti,opcode):

    code=seti[0][-2:]
    modes=[ x for x in seti[0][0:2]]

    for i in range(len(modes)):
        if int(modes[-1-i])==0 and len(seti)!=len(modes):
            foo=opcode[seti[i+1]]
            seti[i+1]=foo
    

    if code in ['01','02','07','08']:
        if code=='01':
            opcode[seti[3]] = seti[1]+seti[2]
            
        elif code=='02':
            opcode[seti[3]]=seti[1]*seti[2]
            
        elif code=='07':
            if seti[1]<seti[2]:
                opcode[seti[3]]=1
            else:
                opcode[seti[3]]=0
            
        elif code=='08':
            if seti[1]==seti[2]:
                opcode[seti[3]]=1
            else:
                opcode[seti[3]]=0
            
        else:
            print('error')        
            '''
        elif code=='09':
            if seti[1]>seti[2]:
                opcode[seti[3]]=1
            else:
                opcode[seti[3]]=0
                '''


    
    if code in ['03','04']:
        if code=='03':
            opcode[seti[1]]=int(input('Please provide input:/n...'))
            
        if code=='04':
            return opcode[seti[1]]
    
    if code in ['05','06']:
        if code=='05':
            if seti[1]!=0:
                return seti[2]
            else:
                return None
        
        if code=='06':
            if seti[1]==0:
                return seti[2]
            else:
                return None
        
def TEST(opcode,phase,inp):
    i=0
    check=0
    while i < len(opcode):
        #print(opcode[i])
        abcde=str('0'*(4-len(str(opcode[i])))+str(opcode[i]))
        if abcde[-2:]=='99':
            i=len(opcode)+1
        
        if abcde[-2:] in ['01','02','07','08']:
            seti=opcode[i:i+4]
            seti[0]=abcde
            intcode(seti,opcode)
            i+=4
        
        elif abcde[-2:] in ['03','04']:
            seti=opcode[i:i+2]
            seti[0]=abcde
            if check==0:
                test = inpcode(seti,opcode,phase)
                check+=1
            else:
                test = inpcode(seti,opcode,inp)
            if test != None:
                return test
            i+=2
            
        elif abcde[-2:] in ['05','06']:
            seti=opcode[i:i+3]
            seti[0]=abcde
            test = intcode(seti,opcode)
            if test != None:
                i=test
            else:
                i+=3

def get_opcode(filename):
    file = open(filename)

    opcode = file.read().split(',')

    file.close()

    for i in range(len(opcode)):
        opcode[i] = int(opcode[i])

    return(opcode)

def thrusters(opcode,phases):
    out=[0]
    for i in range(len(phases)):
        out.append(TEST(opcode,phases[i],out[i]))

    return out[-1]

def max_thrust(opcode):
    thrusts=[]
    for phase in permutations(range(5)):
        thrust=thrusters(opcode,phase)
        thrusts.append(thrust)
        print(phase,thrust)
    
    return(max(thrusts))

def get_opcode(filename):
    file = open(filename)

    opcode = file.read().split(',')

    file.close()

    for i in range(len(opcode)):
        opcode[i] = int(opcode[i])

    return(opcode)

# 5code=[3,225,1,225,6,6,1100,1,238,225,104,0,1101,61,45,225,102,94,66,224,101,-3854,224,224,4,224,102,8,223,223,1001,224,7,224,1,223,224,223,1101,31,30,225,1102,39,44,224,1001,224,-1716,224,4,224,102,8,223,223,1001,224,7,224,1,224,223,223,1101,92,41,225,101,90,40,224,1001,224,-120,224,4,224,102,8,223,223,1001,224,1,224,1,223,224,223,1101,51,78,224,101,-129,224,224,4,224,1002,223,8,223,1001,224,6,224,1,224,223,223,1,170,13,224,101,-140,224,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,1101,14,58,225,1102,58,29,225,1102,68,70,225,1002,217,87,224,101,-783,224,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1101,19,79,225,1001,135,42,224,1001,224,-56,224,4,224,102,8,223,223,1001,224,6,224,1,224,223,223,2,139,144,224,1001,224,-4060,224,4,224,102,8,223,223,101,1,224,224,1,223,224,223,1102,9,51,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1008,677,226,224,102,2,223,223,1006,224,329,101,1,223,223,108,677,677,224,102,2,223,223,1005,224,344,101,1,223,223,107,677,677,224,1002,223,2,223,1005,224,359,101,1,223,223,1107,226,677,224,1002,223,2,223,1005,224,374,1001,223,1,223,1008,677,677,224,102,2,223,223,1006,224,389,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,404,1001,223,1,223,8,677,226,224,102,2,223,223,1005,224,419,1001,223,1,223,8,226,226,224,102,2,223,223,1006,224,434,101,1,223,223,1107,226,226,224,1002,223,2,223,1006,224,449,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,464,101,1,223,223,1108,226,226,224,102,2,223,223,1006,224,479,1001,223,1,223,7,677,677,224,1002,223,2,223,1006,224,494,101,1,223,223,7,677,226,224,102,2,223,223,1005,224,509,101,1,223,223,1108,226,677,224,1002,223,2,223,1006,224,524,101,1,223,223,8,226,677,224,1002,223,2,223,1005,224,539,101,1,223,223,1007,226,226,224,102,2,223,223,1006,224,554,1001,223,1,223,108,226,226,224,1002,223,2,223,1006,224,569,1001,223,1,223,1108,677,226,224,102,2,223,223,1005,224,584,101,1,223,223,108,226,677,224,102,2,223,223,1005,224,599,101,1,223,223,1007,226,677,224,102,2,223,223,1006,224,614,1001,223,1,223,1008,226,226,224,1002,223,2,223,1006,224,629,1001,223,1,223,107,226,226,224,1002,223,2,223,1006,224,644,101,1,223,223,7,226,677,224,102,2,223,223,1005,224,659,1001,223,1,223,107,677,226,224,102,2,223,223,1005,224,674,1001,223,1,223,4,223,99,226]
# 7code=[3,8,1001,8,10,8,105,1,0,0,21,30,55,80,101,118,199,280,361,442,99999,3,9,101,4,9,9,4,9,99,3,9,101,4,9,9,1002,9,4,9,101,4,9,9,1002,9,5,9,1001,9,2,9,4,9,99,3,9,101,5,9,9,1002,9,2,9,101,3,9,9,102,4,9,9,1001,9,2,9,4,9,99,3,9,102,2,9,9,101,5,9,9,102,3,9,9,101,3,9,9,4,9,99,3,9,1001,9,2,9,102,4,9,9,1001,9,3,9,4,9,99,3,9,1001,9,1,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,99,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,102,2,9,9,4,9,99,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,99]

if __name__ == '__main__':
    test0=[3,15,3,16,1002,16,10,16,1,16,15,15,4,15,99,0,0]
    test1=[3,23,3,24,1002,24,10,24,1002,23,-1,23,101,5,23,23,1,24,23,23,4,23,99,0,0]
    test3=[3,31,3,32,1002,32,10,32,1001,31,-2,31,1007,31,0,33,1002,33,7,33,1,33,31,31,1,32,31,31,4,31,99,0,0,0]
    phase0=[4,3,2,1,0]
    phase1=[0,1,2,3,4]
    phase3=[1,0,4,3,2]

    filename = '7.txt'
    code=get_opcode(filename)
    print(max_thrust(code))


    

